name: Android

on:
  workflow_dispatch:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  build-rust:
    name: Build Binaries
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - build: linux-aarch64
            target-triple: aarch64-linux-android
            target-simple: arm64-v8a
            target-cmake: armv8-a

          - build: linux-arm
            target-triple: armv7-linux-androideabi
            target-simple: armeabi-v7a
            target-cmake: armv7-a

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Install cmake
        uses: android-actions/setup-android@v3
        with:
          packages: 'cmake;3.10.2.4988404'

      - name: Install ${{ matrix.target-triple }} toolchains
        run: |
          rustup target add ${{ matrix.target-triple }}

      - name: Install cargo-ndk
        run: |
          cargo install cargo-ndk
      
      - name: Build project
        run: |
          export CMAKE_TOOLCHAIN_FILE="$ANDROID_NDK/build/cmake/android.toolchain.cmake"
          export ANDROID_ABI="${{ matrix.target-simple }}"
          export CARGO_NDK_ANDROID_TARGET="$ANDROID_ABI"
          
          cd rust
          cargo ndk -t ${{ matrix.target-simple }} build --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build }}
          path: rust/target/${{ matrix.target-triple }}/release/*.so

  build:
    name: Build & Publish Jar
    runs-on: ubuntu-latest
    needs: build-rust

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: src/main/resources/natives

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: 'gradle'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v3
        with:
          arguments: build -Pversion=${{ env.VERSION }}

      - name: Publish to Maven
        continue-on-error: true
        uses: gradle/actions/setup-gradle@v3
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        with:
          arguments: publish -x test -Pversion=${{ env.VERSION }}

      - name: Upload artifact
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/libs/rnnoise-jni-rust-${{ env.VERSION }}.jar

